jQuery(document).ready(function(N){const l="yy-mm-dd";const E="display";const W="active";const G="arrival";const x="departure";function A(ad){return(("number"===typeof ad)&&(0<ad))}function ac(ae,ad,af){return(("string"===typeof ae)&&("object"===typeof ad)&&(ad.hasOwnProperty(ae))&&(af===typeof ad[ae]))}function e(ae,ad,af){return ac(ae,ad,af)?ad[ae]:undefined}function C(ae,ad){let data=ad.getAttribute("data-"+ae);return(null===data)?"":data}function L(ae,af,ad){ad.setAttribute("data-"+ae,af)}function X(ae,ad){ad.removeAttribute("data-"+ae)}function Z(ad,af){try{return N.datepicker.formatDate(af,ad)}catch(ae){console.log(ae)}return""}function P(ad,af){try{return N.datepicker.parseDate(af,ad)}catch(ae){console.log(ae)}return null}function D(ad,ae,af){return Z(P(ad,ae),af)}function U(ae,ad){if((null===ae)||(null===ad)||("function"!==typeof ae.getTime)||("function"!==typeof ad.getTime)){return false}return ae.getTime()===ad.getTime()}function I(ad,ae,af){let theDate=P(ad,af);let deadLine=P(ae,af);return((null!==theDate)&&(null!==deadLine)&&(theDate<deadLine))}function F(ae,ag,ad,af){let date=P(ae,af);let start=P(ag,af);let end=P(ad,af);return((null!==date)&&(null!==start)&&(null!==end)&&(start<=date)&&(date<=end))}function H(ad,ae){let newDate=new Date(ad.getTime());newDate.setDate(ad.getDate()+ae);return newDate}function u(ad){let instance=C("instance",ad);return(""===instance)?"0":instance}function t(ad){let i=u(ad);return(undefined===availabilityCalendar.calendars[i])?{}:availabilityCalendar.calendars[i].parameters}function y(ad,ae){let parameters=t(ae);return(undefined===parameters[ad])?null:parameters[ad]}function d(ae,ad){let id=y(ae+"Id",ad);return((null===id)||(""===id))?null:document.getElementById(id)}function B(ad){let currentType=C("type",ad);if(""===currentType){currentType=((null===d(G,ad))||(null===d(x,ad)))?E:W;L("type",currentType,ad)}return currentType}function k(ad){let i=u(ad);return(undefined===availabilityCalendar.calendars[i])?{}:availabilityCalendar.calendars[i].availability}function p(ad){let state=C("state",ad);if(""===state){state=G;T(ad,state)}return state}function T(ae,ad){ad=("undefined"===typeof ad)?G:ad;L("state",ad,ae);c(ad,ae)}function b(ad){let state=p(ad);let newState=(G===state)?x:G;T(ad,newState);a(ad)}function c(ad,ae){let oldState=(G===ad)?x:G;J(ad,ae).forEach(function(af){try{N(af.parentNode).removeClass("calendar-deem").addClass("calendar-highlight")}catch(ag){console.log(ag)}});J(oldState,ae).forEach(function(af){try{N(af.parentNode).removeClass("calendar-highlight").addClass("calendar-deem")}catch(ag){console.log(ag)}})}function J(ad,ae){let fields=[];let types=["","Display"];for(let type in types){let input=d(ad+types[type],ae);let inputType=null;if((null!==input)&&(null!==(inputType=input.getAttribute("type")))&&("hidden"!==inputType)){fields.push(input)}}return fields}function Y(ad){if(true===y("showRates",ad)){let format=aa(ad);let dates=k(ad);N(ad).find('.ui-datepicker-calendar td.has-rate[class*="date-key-"] > *[class*="ui-state"]').each(function(){let date=m(this.parentNode.className,format);let rate="";if((undefined!==date)&&j(date,dates)&&(""!==(rate=h(ab(date,dates))))&&(0===N(this.parentNode).find(".rate").length)){let rateElement=document.createElement("span");rateElement.className="rate";rateElement.appendChild(document.createTextNode(rate));this.parentNode.appendChild(rateElement)}})}N(ad).find(".ui-datepicker-calendar td[title]").contextmenu(function(ae){ae.preventDefault();try{alert(this.getAttribute("title").replace(/\.\s?/gi,".\n"))}catch(af){console.log(af)}})}function m(ad,ae){let match=null;let regex=/date-key-(\d{4}-\d{2}-\d{2})/;if(("string"===typeof ad)&&(null!==(match=ad.match(regex)))&&("string"===typeof match[1])){return D(match[1],l,ae)}return undefined}function a(ad){window.setTimeout(function(ae){Y(ae)},250,ad)}function j(ad,ae){return ac(ad,ae,"object")}function ab(ad,ae){let data=e(ad,ae,"object");return(undefined===data)?{}:data}function h(ad){let rate=e("rate",ad,"string");return(undefined===rate)?"":rate}function R(ad){let available=e("available",ad,"boolean");return(undefined===available)?false:available}function n(ad){let arrivalAllowed=e("arrival",ad,"boolean");return(undefined===arrivalAllowed)?false:arrivalAllowed}function v(ad){let departureAllowed=e("departure",ad,"boolean");return(undefined===departureAllowed)?false:departureAllowed}function O(ad,ae){if(j(ad,ae)){return R(ab(ad,ae))}return false}function K(ad,ae){if(j(ad,ae)){return v(ab(ad,ae))}return false}function Q(ad){let classes=[];let messages=[];let state=p(this);let format=y("dateFormat",this);let dates=k(this);let theDateString=Z(ad,format);let theDateKey=Z(ad,l);classes.push("date-key-"+theDateKey);let hasData=j(theDateString,dates);classes.push(hasData?"has-data":"no-data");let dateData=ab(theDateString,dates);let rate=h(dateData);let hasRate=(""!==rate);classes.push(hasRate?"has-rate":"no-rate");if(hasRate){messages.push(availabilityCalendar.messages.rate.replace("{rate}",rate))}messages.push(availabilityCalendar.messages.minStay.replace("{minStay}",z(theDateString,this)));let beforeMinDate=(ad<P(y("firstDate",this),format));if(beforeMinDate){classes.push("before-min-date")}let afterMaxDate=(ad>P(y("lastDate",this),format));if(afterMaxDate){classes.push("after-max-date")}let arrivalAvailable=(R(dateData)&&!(beforeMinDate||afterMaxDate));classes.push(arrivalAvailable?"arrival-available":"arrival-unavailable");messages.push(arrivalAvailable?availabilityCalendar.messages.available:availabilityCalendar.messages.unavailable);let yesterdayData=ab(Z(H(ad,-1),format),dates);let departureAvailable=(R(yesterdayData)&&!(beforeMinDate||afterMaxDate));classes.push(departureAvailable?"departure-available":"departure-unavailable");let arrivalAllowed=n(dateData);classes.push(arrivalAllowed?"arrival-allowed":"arrival-prohibited");messages.push(arrivalAllowed?availabilityCalendar.messages.arrivalsAllowed:availabilityCalendar.messages.arrivalsNotAllowed);let departureAllowed=v(dateData);classes.push(departureAllowed?"departure-allowed":"departure-prohibited");messages.push(departureAllowed?availabilityCalendar.messages.departuresAllowed:availabilityCalendar.messages.departuresNotAllowed);let canArrive=(arrivalAvailable&&arrivalAllowed);let canDepart=(departureAvailable&&departureAllowed);let conflictMessage=false;let selectedArrivalDateString=C("selected-arrival",this);let selectedArrivalDate=P(selectedArrivalDateString,format);let selectedArrival=((null!==selectedArrivalDate)&&U(ad,selectedArrivalDate));if(selectedArrival){classes.push("selected-arrival");messages.push(availabilityCalendar.messages.selectedArrival);if(!canArrive||beforeMinDate||afterMaxDate){classes.push("arrival-conflict");conflictMessage=true}}let selectedDepartureDateString=C("selected-departure",this);let selectedDepartureDate=P(selectedDepartureDateString,format);let selectedDeparture=((null!==selectedDepartureDate)&&U(ad,selectedDepartureDate));if(selectedDeparture){classes.push("selected-departure");messages.push(availabilityCalendar.messages.selectedDeparture);if(!canDepart||beforeMinDate||afterMaxDate){classes.push("departure-conflict");conflictMessage=true}}if((null!==selectedArrivalDate)&&(null!==selectedDepartureDate)&&((selectedArrivalDate<ad)&&(ad<selectedDepartureDate))){classes.push("selected-stay");messages.push(availabilityCalendar.messages.selectedStay);if((!arrivalAvailable&&!departureAvailable)||beforeMinDate||afterMaxDate){classes.push("stay-conflict");conflictMessage=true}else{if(!arrivalAvailable){classes.push("arrival-conflict");conflictMessage=true}else{if(!departureAvailable){classes.push("departure-conflict");conflictMessage=true}}}}if(true===conflictMessage){messages.push(availabilityCalendar.messages.conflict)}let minDepartureDateString=C("first-departure",this);let minStayMessage=false;if((x===state)&&(""!==minDepartureDateString)){if((""!==selectedArrivalDateString)&&(theDateString===selectedArrivalDateString)){classes.push("minimum-stay-requirement");minStayMessage=true}else{if((""!==selectedArrivalDateString)&&(I(selectedArrivalDateString,theDateString,format))&&(I(theDateString,minDepartureDateString,format))){classes.push("minimum-stay-requirement selected-stay");minStayMessage=true}else{if(theDateString===minDepartureDateString){classes.push("minimum-stay-requirement selected-departure");messages.push(availabilityCalendar.messages.firstAvailableDeparture)}}}if(true===minStayMessage){messages.push(availabilityCalendar.messages.inMinStayPeriod)}}let selectable=false;if(G===state){selectable=canArrive}else{selectable=(canDepart&&F(theDateString,C("first-departure",this),C("last-departure",this),format))}return[selectable,classes.join(" "),messages.join(" ")]}function q(ae,ad,af){let state=p(af);if(G===state){let messages=[];let lastDepartureDateString=s(ae,af);let firstDepartureDateString=o(ae,af);if(I(lastDepartureDateString,firstDepartureDateString,ad.settings.dateFormat)){messages.push(availabilityCalendar.messages.minStayRequirementViolated);messages.push(availabilityCalendar.messages.chooseAnotherDate);alert(messages.join("\n"));a(af);return}if(!F(S(firstDepartureDateString,af),firstDepartureDateString,lastDepartureDateString,ad.settings.dateFormat)){messages.push(availabilityCalendar.messages.firstAllowedDepartureInaccessible);messages.push(availabilityCalendar.messages.chooseAnotherDate);alert(messages.join("\n"));a(af);return}g("",x,af,ad.settings.dateFormat,ad.settings.altFormat);L("first-departure",firstDepartureDateString,af);L("last-departure",lastDepartureDateString,af)}else{if(x===state){X("first-departure",af);X("last-departure",af)}}g(ae,state,af,ad.settings.dateFormat,ad.settings.altFormat);b(af)}function g(af,ae,ah,ag,ad){L("selected-"+ae,af,ah);let inputField=d(ae,ah);inputField.value=af;let displayInputField=d(ae+"Display",ah);if(null!==displayInputField){displayInputField.value=(""===af)?af:D(af,ag,ad)}}function o(ae,ad){let format=aa(ad);return Z(H(P(ae,format),z(ae,ad)),format)}function z(ad,ae){let dates=k(ae);if(j(ad,dates)){let dateMinStay=e("minStay",ab(ad,dates),"number");if(A(dateMinStay)){return dateMinStay}}return r(ae)}function r(ad){let parameters=t(ad);let calendarDefault=e("minStay",parameters,"number");return A(calendarDefault)?calendarDefault:availabilityCalendar.defaults.minStay}function s(ae,ad){let dates=k(ad);if(!O(ae,dates)){return ae}let format=aa(ad);let arrivalDate=P(ae,format);let addDays=1;let newDate="";let maxStay=M(ae,ad);while(O(newDate=Z(H(arrivalDate,addDays),format),dates)){if(addDays>=maxStay){return newDate}addDays++}return newDate}function M(ad,ae){let dates=k(ae);let defaultMaxStay=y("maxStay",ae);return(dates.hasOwnProperty(ad)&&("number"===typeof dates[ad].maxStay)&&(0<dates[ad].maxStay))?dates[ad].maxStay:((("number"===typeof defaultMaxStay)&&(0<defaultMaxStay))?defaultMaxStay:availabilityCalendar.defaults.maxStay)}function S(ae,ad){let dates=k(ad);if(K(ae,dates)){return ae}let format=aa(ad);let addDays=1;let newDate=Z(H(P(ae,format),addDays),format);while(!K(newDate,dates)&&j(newDate,dates)){addDays++;newDate=Z(H(P(ae,format),addDays),format)}return newDate}function aa(ad){let format=y("dateFormat",ad);return(("string"===typeof format)&&(""!==format))?format:availabilityCalendar.defaults.dateFormat}function V(ad){let format=y("dateFormatDisplay",ad);return(("string"===typeof format)&&(""!==format))?format:availabilityCalendar.defaults.dateFormatDisplay}function f(ad){let fields=[G,x];for(let index in fields){let field=fields[index];let inputField=d(field,ad);if((null!==inputField)&&("string"===typeof inputField.value)&&(""!==inputField.value)){L("selected-"+field,inputField.value,ad);let displayInputField=d(field+"Display",ad);if(null!==displayInputField){displayInputField.value=D(inputField.value,aa(ad),V(ad))}}}}function w(ad,ae){console.log(availabilityCalendar);f(ae);T(ae,G);let calendarParameters=t(ae);let parameters={beforeShowDay:Q,altFormat:calendarParameters.dateFormatDisplay,dateFormat:calendarParameters.dateFormat,firstDay:calendarParameters.weekStart,defaultDate:null,gotoCurrent:true,maxDate:calendarParameters.lastDate,minDate:calendarParameters.firstDate,showOtherMonths:false,numberOfMonths:3,onChangeMonthYear:function(){a(this)}};let calendarType=B(ae);switch(calendarType){case E:N(ae).datepicker(parameters);break;case W:default:parameters.onSelect=function(ag,af){q(ag,af,this)};N(ae).datepicker(parameters);break}a(ae)}availabilityCalendar.messages={chooseAnotherDate:"Please, choose another date or call us for assistance.",minStayRequirementViolated:"Sorry, minimum stay requirement does not allow to arrive on this date.",firstAllowedDepartureInaccessible:"Sorry, first allowed departure date is unavailable if you arrive on this date.",rate:"Rates from {rate}/night.",minStay:"Minimum stay is {minStay} night(s).",selectedArrival:"Your selected arrival date.",selectedStay:"Your selected stay.",selectedDeparture:"Your selected departure.",conflict:"Conflicts with your selected dates.",available:"Available.",unavailable:"Booked.",arrivalsAllowed:"Arrivals allowed.",departuresAllowed:"Departures allowed.",arrivalsNotAllowed:"Arrivals are not allowed.",departuresNotAllowed:"Departures are not allowed.",inMinStayPeriod:"In minimum stay period.",firstAvailableDeparture:"First available departure."};availabilityCalendar.defaults={dateFormat:"yy-mm-dd",dateFormatDisplay:"yy-mm-dd",maxStay:180,minStay:1};N(".availability-calendar").each(w)});