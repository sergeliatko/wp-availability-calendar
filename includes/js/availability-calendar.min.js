jQuery(document).ready(function(K){const h="yy-mm-dd";const B="display";const R="active";const D="arrival";const t="departure";function G(X,Y){let newDate=new Date(X.getTime());newDate.setDate(X.getDate()+Y);return newDate}function U(X,Z){try{return K.datepicker.formatDate(Z,X)}catch(Y){console.log(Y)}return""}function L(X,Z){try{return K.datepicker.parseDate(Z,X)}catch(Y){console.log(Y)}return null}function A(X,Y,Z){return U(L(X,Y),Z)}function p(X){return y("instance",X)}function o(X){let i=p(X);return(undefined===availabilityCalendar.calendars[i])?{}:availabilityCalendar.calendars[i].parameters}function u(X,Y){let parameters=o(Y);return(undefined===parameters[X])?null:parameters[X]}function b(Y,X){let id=u(Y+"Id",X);return((null===id)||(""===id))?null:document.getElementById(id)}function x(X){let currentType=y("type",X);if(""===currentType){currentType=((null===b(D,X))||(null===b(t,X)))?B:R;I("type",currentType,X)}return currentType}function g(X){let i=p(X);return(undefined===availabilityCalendar.calendars[i])?{}:availabilityCalendar.calendars[i].availability}function y(Y,X){let data=X.getAttribute("data-"+Y);return(null===data)?"":data}function I(Y,Z,X){X.setAttribute("data-"+Y,Z)}function S(Y,X){X.removeAttribute("data-"+Y)}function l(X){let state=y("state",X);if(""===state){state=D;P(X,state)}return state}function P(Y,X){X=("undefined"===typeof X)?D:X;I("state",X,Y)}function q(X){let state=l(X);let newState=(D===state)?t:D;P(X,newState);a(X)}function T(X){if(true===u("showRates",X)){let format=u("dateFormat",X);let dates=g(X);K(X).find('.ui-datepicker-calendar td.has-rate[class*="date-key-"] > *[class*="ui-state"]').each(function(){let date=z(this.parentNode.className,format);let rate="";if((undefined!==date)&&f(date,dates)&&(""!==(rate=e(V(date,dates))))&&(0===K(this.parentNode).find(".rate").length)){let rateElement=document.createElement("span");rateElement.className="rate";rateElement.appendChild(document.createTextNode(rate));this.parentNode.appendChild(rateElement)}})}K(X).find(".ui-datepicker-calendar td[title]").contextmenu(function(Y){Y.preventDefault();try{alert(this.getAttribute("title").replace(/\.\s?/gi,".\n"))}catch(Z){console.log(Z)}})}function z(X,Y){let match=null;let regex=/date-key-(\d{4}-\d{2}-\d{2})/;if(("string"===typeof X)&&(null!==(match=X.match(regex)))&&("string"===typeof match[1])){return A(match[1],h,Y)}return undefined}function a(X){window.setTimeout(function(Y){T(Y)},250,X)}function Q(Y,X){if((null===Y)||(null===X)||("function"!==typeof Y.getTime)||("function"!==typeof X.getTime)){return false}return Y.getTime()===X.getTime()}function V(X,Y){let data=c(X,Y,"object");return(undefined===data)?{}:data}function e(X){let rate=c("rate",X,"string");return(undefined===rate)?"":rate}function M(X){let available=c("available",X,"boolean");return(undefined===available)?false:available}function j(X){let arrivalAllowed=c("arrival",X,"boolean");return(undefined===arrivalAllowed)?false:arrivalAllowed}function r(X){let departureAllowed=c("departure",X,"boolean");return(undefined===departureAllowed)?false:departureAllowed}function f(X,Y){return W(X,Y,"object")}function c(Y,X,Z){return W(Y,X,Z)?X[Y]:undefined}function W(Y,X,Z){return(("string"===typeof Y)&&("object"===typeof X)&&(X.hasOwnProperty(Y))&&(Z===typeof X[Y]))}function N(X){let classes=[];let messages=[];let type=x(this);let state=l(this);let format=u("dateFormat",this);let dates=g(this);let theDateString=U(X,format);let theDateKey=U(X,h);classes.push("date-key-"+theDateKey);let hasData=f(theDateString,dates);classes.push(hasData?"has-data":"no-data");let dateData=V(theDateString,dates);let rate=e(dateData);let hasRate=(""!==rate);classes.push(hasRate?"has-rate":"no-rate");if(hasRate){messages.push(availabilityCalendar.messages.rate.replace("{rate}",rate))}messages.push(availabilityCalendar.messages.minStay.replace("{minStay}",w(theDateString,dates,u("minStay",this))));let beforeMinDate=(X<L(u("firstDate",this),format));if(beforeMinDate){classes.push("before-min-date")}let afterMaxDate=(X>L(u("lastDate",this),format));if(afterMaxDate){classes.push("after-max-date")}let arrivalAvailable=(M(dateData)&&!(beforeMinDate||afterMaxDate));classes.push(arrivalAvailable?"arrival-available":"arrival-unavailable");messages.push(arrivalAvailable?availabilityCalendar.messages.available:availabilityCalendar.messages.unavailable);let yesterdayData=V(U(G(X,-1),format),dates);let departureAvailable=(M(yesterdayData)&&!(beforeMinDate||afterMaxDate));classes.push(departureAvailable?"departure-available":"departure-unavailable");let arrivalAllowed=j(dateData);classes.push(arrivalAllowed?"arrival-allowed":"arrival-prohibited");messages.push(arrivalAllowed?availabilityCalendar.messages.arrivalsAllowed:availabilityCalendar.messages.arrivalsNotAllowed);let departureAllowed=r(dateData);classes.push(departureAllowed?"departure-allowed":"departure-prohibited");messages.push(departureAllowed?availabilityCalendar.messages.departuresAllowed:availabilityCalendar.messages.departuresNotAllowed);let canArrive=(arrivalAvailable&&arrivalAllowed);let canDepart=(departureAvailable&&departureAllowed);let conflictMessage=false;let selectedArrivalDateString=y("selected-arrival",this);let selectedArrivalDate=L(selectedArrivalDateString,format);let selectedArrival=((null!==selectedArrivalDate)&&Q(X,selectedArrivalDate));if(selectedArrival){classes.push("selected-arrival");messages.push(availabilityCalendar.messages.selectedArrival);if(!canArrive||beforeMinDate||afterMaxDate){classes.push("arrival-conflict");conflictMessage=true}}let selectedDepartureDateString=y("selected-departure",this);let selectedDepartureDate=L(selectedDepartureDateString,format);let selectedDeparture=((null!==selectedDepartureDate)&&Q(X,selectedDepartureDate));if(selectedDeparture){classes.push("selected-departure");messages.push(availabilityCalendar.messages.selectedDeparture);if(!canDepart||beforeMinDate||afterMaxDate){classes.push("departure-conflict");conflictMessage=true}}if((null!==selectedArrivalDate)&&(null!==selectedDepartureDate)&&((selectedArrivalDate<X)&&(X<selectedDepartureDate))){classes.push("selected-stay");messages.push(availabilityCalendar.messages.selectedStay);if((!arrivalAvailable&&!departureAvailable)||beforeMinDate||afterMaxDate){classes.push("stay-conflict");conflictMessage=true}else{if(!arrivalAvailable){classes.push("arrival-conflict");conflictMessage=true}else{if(!departureAvailable){classes.push("departure-conflict");conflictMessage=true}}}}if(true===conflictMessage){messages.push(availabilityCalendar.messages.conflict)}let minDepartureDateString=y("first-departure",this);let minStayMessage=false;if((t===state)&&(""!==minDepartureDateString)){if((""!==selectedArrivalDateString)&&(theDateString===selectedArrivalDateString)){classes.push("minimum-stay-requirement");minStayMessage=true}else{if((""!==selectedArrivalDateString)&&(F(selectedArrivalDateString,theDateString,format))&&(F(theDateString,minDepartureDateString,format))){classes.push("minimum-stay-requirement selected-stay");minStayMessage=true}else{if(theDateString===minDepartureDateString){classes.push("minimum-stay-requirement selected-departure");messages.push(availabilityCalendar.messages.firstAvailableDeparture)}}}if(true===minStayMessage){messages.push(availabilityCalendar.messages.inMinStayPeriod)}}let selectable=false;if(D===state){selectable=canArrive}else{selectable=(canDepart&&C(theDateString,y("first-departure",this),y("last-departure",this),format))}return[selectable,classes.join(" "),messages.join(" ")]}function m(Y,X,Z){let state=l(Z);if(D===state){let messages=[];let lastDepartureDateString=n(Y,Z);let firstDepartureDateString=k(Y,Z);if(F(lastDepartureDateString,firstDepartureDateString,X.settings.dateFormat)){messages.push(availabilityCalendar.messages.minStayRequirementViolated);messages.push(availabilityCalendar.messages.chooseAnotherDate);alert(messages.join("\n"));a(Z);return}if(!C(O(firstDepartureDateString,Z),firstDepartureDateString,lastDepartureDateString,X.settings.dateFormat)){messages.push(availabilityCalendar.messages.firstAllowedDepartureInaccessible);messages.push(availabilityCalendar.messages.chooseAnotherDate);alert(messages.join("\n"));a(Z);return}d("",t,Z,X.settings.dateFormat,X.settings.altFormat);I("first-departure",firstDepartureDateString,Z);I("last-departure",lastDepartureDateString,Z)}else{if(t===state){S("first-departure",Z);S("last-departure",Z)}}d(Y,state,Z,X.settings.dateFormat,X.settings.altFormat);q(Z)}function d(Z,Y,ab,aa,X){I("selected-"+Y,Z,ab);let inputField=b(Y,ab);inputField.value=Z;let displayInputField=b(Y+"Display",ab);if(null!==displayInputField){displayInputField.value=(""===Z)?Z:A(Z,aa,X)}}function F(X,Y,Z){return L(X,Z)<L(Y,Z)}function C(Y,aa,X,Z){let date=L(Y,Z);let start=L(aa,Z);let end=L(X,Z);return((null!==date)&&(null!==start)&&(null!==end)&&(start<=date)&&(date<=end))}function k(Y,X){let minStay=w(Y,g(X),u("minStay",X))let format=u("dateFormat",X);return U(G(L(Y,format),minStay),format)}function w(Y,Z,X){if(f(Y,Z)){let data=V(Y,Z);let dateMinStay=c("minStay",data,"number");if(("number"===typeof dateMinStay)&&(0<dateMinStay)){return dateMinStay}}if(("number"===typeof X)&&(0<X)){return X}return availabilityCalendar.defaults.minStay}function n(Y,X){let dates=g(X);if(!v(Y,dates)){return Y}let format=u("dateFormat",X);let arrivalDate=L(Y,format);let addDays=1;let newDate="";let maxStay=J(Y,X);while(v(newDate=U(G(arrivalDate,addDays),format),dates)){if(addDays>=maxStay){return newDate}addDays++}return newDate}function J(X,Y){let dates=g(Y);let defaultMaxStay=u("maxStay",Y);return(dates.hasOwnProperty(X)&&("number"===typeof dates[X].maxStay)&&(0<dates[X].maxStay))?dates[X].maxStay:((("number"===typeof defaultMaxStay)&&(0<defaultMaxStay))?defaultMaxStay:availabilityCalendar.defaults.maxStay)}function v(X,Y){return(("object"===typeof Y)&&Y.hasOwnProperty(X)&&("undefined"!==Y[X].available)&&(true===Y[X].available))}function O(Y,X){let dates=g(X);if(H(Y,dates)){return Y}let format=u("dateFormat",X);let addDays=1;let newDate=U(G(L(Y,format),addDays),format);while(!H(newDate,dates)&&f(newDate,dates)){addDays++;newDate=U(G(L(Y,format),addDays),format)}return newDate}function H(X,Y){return(("object"===typeof Y)&&Y.hasOwnProperty(X)&&("undefined"!==Y[X].departure)&&(true===Y[X].departure))}function E(X,Y){return(("object"===typeof Y)&&Y.hasOwnProperty(X)&&("undefined"!==Y[X].arrival)&&(true===Y[X].arrival))}function s(X,Y){console.log(availabilityCalendar);P(Y,D);let calendarParameters=o(Y);let calendarType=x(Y);let parameters={beforeShowDay:N,altFormat:calendarParameters.dateFormatDisplay,dateFormat:calendarParameters.dateFormat,firstDay:calendarParameters.weekStart,defaultDate:null,gotoCurrent:true,maxDate:calendarParameters.lastDate,minDate:calendarParameters.firstDate,showOtherMonths:false,numberOfMonths:3,onChangeMonthYear:function(){a(this)}};switch(calendarType){case B:K(Y).datepicker(parameters);break;case R:default:parameters.onSelect=function(aa,Z){m(aa,Z,this)};K(Y).datepicker(parameters);break}a(Y)}availabilityCalendar.messages={chooseAnotherDate:"Please, choose another date or call us for assistance.",minStayRequirementViolated:"Sorry, minimum stay requirement does not allow to arrive on this date.",firstAllowedDepartureInaccessible:"Sorry, first allowed departure date is unavailable if you arrive on this date.",rate:"Rates from {rate}/night.",minStay:"Minimum stay is {minStay} night(s).",selectedArrival:"Your selected arrival date.",selectedStay:"Your selected stay.",selectedDeparture:"Your selected departure.",conflict:"Conflicts with your selected dates.",available:"Available.",unavailable:"Booked.",arrivalsAllowed:"Arrivals allowed.",departuresAllowed:"Departures allowed.",arrivalsNotAllowed:"Arrivals are not allowed.",departuresNotAllowed:"Departures are not allowed.",inMinStayPeriod:"In minimum stay period.",firstAvailableDeparture:"First available departure."};availabilityCalendar.defaults={maxStay:180,minStay:1};let clickTimeout=null;let doubleClicked=false;K(".availability-calendar").each(s)});