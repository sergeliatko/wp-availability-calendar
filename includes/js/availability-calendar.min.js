jQuery(document).ready(function(g){const x="display";const j="active";const w="arrival";const s="departure";function t(B){let keys=Object.keys(B);if(0>=keys.length){return null}return B[keys[keys.length-1]]}function m(B,C){let newDate=new Date(B.getTime());newDate.setDate(B.getDate()+C);return newDate}function v(B,C){return g.datepicker.formatDate(C,B)}function q(B,C){return g.datepicker.parseDate(C,B)}function a(B,C,D){return v(q(B,C),D)}function f(B){return n("instance",B)}function r(B){let i=f(B);return(undefined===availabilityCalendar.calendars[i])?{}:availabilityCalendar.calendars[i].parameters}function d(B,C){let parameters=r(C);return(undefined===parameters[B])?null:parameters[B]}function u(C,B){switch(C){case"arrival":return document.getElementById(d("arrivalId",B));case"arrivalDisplay":return document.getElementById(d("arrivalIdDisplay",B));case"departure":return document.getElementById(d("departureId",B));case"departureDisplay":return document.getElementById(d("departureIdDisplay",B));default:return null}}function c(B){let currentType=n("type",B);if(null===currentType){currentType=((null===u(w,B))||(null===u(s,B)))?x:j;b("type",currentType,B)}return currentType}function l(B){let i=f(B);return(undefined===availabilityCalendar.calendars[i])?{}:availabilityCalendar.calendars[i].availability}function n(C,B){return B.getAttribute("data-"+C)}function b(C,D,B){B.setAttribute("data-"+C,D)}function k(B){let state=n("state",B);if(null===state){state=w;o(B,state)}return state}function o(C,B){B=("undefined"===typeof B)?w:B;b("state",B,C)}function z(B){let state=k(B);let newState=(w===state)?s:w;o(B,newState);p(B)}function y(B){let showRates=(true===d("showRates",B));if(!showRates){return}let format=d("dateFormat",B);let dates=l(B);g(B).find('.ui-datepicker-calendar td > *[class*="ui-state"]').each(function(){let day=this.textContent;if(""!==day){let date=new Date(parseInt(this.parentNode.getAttribute("data-year")),parseInt(this.parentNode.getAttribute("data-month")),parseInt(this.textContent),0,0,0,0);if(date instanceof Date&&!isNaN(date)){let dateString=v(date,format);if(dates.hasOwnProperty(dateString)&&("undefined"!==typeof dates[dateString].rate)&&(""!==dates[dateString].rate)){if(null===n("rate",this.parentNode)){b("rate",dates[dateString].rate,this.parentNode);let rate=document.createElement("span");rate.className="nightly-rate";rate.appendChild(document.createTextNode(dates[dateString].rate));this.parentNode.appendChild(rate)}}}}})}function p(B){window.setTimeout(function(C){y(C)},250,B)}function h(B){let classes=[];let messages=[];let selectedArrival=null;let selectedDeparture=null;let type=c(this);let state=k(this);let format=d("dateFormat",this);let dates=l(this);let date=v(B,format);if("active"===type){let arrivalInput=u("arrival",this);selectedArrival=(""===arrivalInput.value)?q(arrivalInput.value,format):null;if(selectedArrival===B){classes.push("selected-arrival");messages.push("Your selected arrival date.")}let departureInput=u("arrival",this);selectedDeparture=(""===departureInput.value)?q(departureInput.value,format):null;if(selectedDeparture===B){classes.push("selected-departure");messages.push("Your selected departure date.")}if((null!==selectedArrival)&&(null!==selectedDeparture)){if(selectedArrival<B<selectedDeparture){classes.push("selected-date");messages.push("Your stay period.")}}}if(B<q(d("firstDate",this),format)){return[false,classes.join(" "),messages.join(" ")]}let lastDay=null;let lastDate=d("lastDate",this);let maxDate=("arrival"===state)?lastDate:((null===(lastDay=t(dates)))?lastDate:lastDay.date);if(B>q(maxDate,format)){return[false,classes.join(" "),messages.join(" ")]}if(!dates.hasOwnProperty(date)){return[false,classes.join(" "),messages.join(" ")]}if(("departure"===state)&&(null!==selectedArrival)){let minStay=(0===dates[date].minStay)?d("minStay",this):dates[date].minStay;if(B<m(selectedArrival,minStay)){return[false,classes.join(" "),messages.join(" ")]}}if("arrival"===state){let arrivalsAllowed=(true===dates[date].arrival);if(!arrivalsAllowed){classes.push("arrivals-not-allowed")}let available=(true===dates[date].available);let yesterday=v(m(B,-1),format);let availableYesterday=dates.hasOwnProperty(yesterday)?(true===dates[yesterday].available):false;if(!available){classes.push("unavailable");messages.push("Unavailable.");if((B===selectedArrival)||((null!==selectedArrival)&&(null!==selectedDeparture)&&(selectedArrival<B<selectedDeparture))){classes.push("selected-conflict");messages.push("Conflicts with your selected period.")}if(availableYesterday){classes.push("departure-only");messages.push("Departure only.")}return[false,classes.join(" "),messages.join(" ")]}else{classes.push("available");if(arrivalsAllowed){messages.push("Available for arrival.");messages.push(parseInt(dates[date].minStay).toString()+" night(s) minimum stay.")}else{messages.push("Available. Arrivals are not allowed this day.")}messages.push("Rates from "+dates[date].rate+"/night.");if(!availableYesterday){classes.push("arrival-only")}return[arrivalsAllowed,classes.join(" "),messages.join(" ")]}}else{let departuresAllowed=(true===dates[date].departure);if(!departuresAllowed){classes.push("departures-not-allowed")}}return[false,classes.join(" "),messages.join(" ")]}function A(C,B,D){let state=k(D);let inputField=u(state,D);inputField.value=C;let displayInputField=u(state+"Display",D);if(null!==displayInputField){displayInputField.value=a(C,B.settings.dateFormat,B.settings.altFormat)}z(D)}function e(B,C){console.log(availabilityCalendar);o(C,w);let calendarParameters=r(C);let calendarType=c(C);let parameters={beforeShowDay:h,altFormat:calendarParameters.dateFormatDisplay,dateFormat:calendarParameters.dateFormat,firstDay:calendarParameters.weekStart,defaultDate:null,gotoCurrent:true,maxDate:calendarParameters.lastDate,minDate:calendarParameters.firstDate,showOtherMonths:false,numberOfMonths:3,onChangeMonthYear:function(){p(this)}};switch(calendarType){case x:g(C).datepicker(parameters);break;case j:default:parameters.onSelect=function(E,D){A(E,D,this)};g(C).datepicker(parameters);break}p(C)}availabilityCalendar.messages={};g(".availability-calendar").each(e)});